name: github_actions_gtest_example-Debug

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Install gtest manually
      run: sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && sudo cp *.a /usr/lib && sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a
    - uses: actions/checkout@v1
    - name: configure
      run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-Werror" ..
    - name: make
      run: cd build && make
    - name: Run Test
      run: /home/runner/work/github_actions_gtest_example/github_actions_gtest_example/build/test/github_actions_gtest_example.test
    - name: ssh-pipeline
      uses: cross-the-world/ssh-pipeline@v1.2.0
    - name: Setup SSH
      uses: kielabokkie/ssh-key-and-known-hosts-action@v1.3.5
    - name: SSH Command
      uses: D3rHase/ssh-command-action@v0.2.2
    - name: setup ssh
      uses: D3rHase/ssh-command-action@{version}
      with:
        host: ${{secrets.HOST}} # Remote server address / ip - required
        port: ${{secrets.PORT}} # Remote server port -  Default: 22 - optional
        user: ${{secrets.USER}} # Remote server user - required
        private_key: ${{secrets.PRIVATE_KEY}} # Private ssh key registered on the remote server - required
        host_fingerprint: ${{secrets.HOST_FINGERPRINT}} # Public ssh key fingerprint, viewable via ssh-keyscan -H $HOST -p $PORT - optional
        command: echo 'hello world' # Command to be executed - Default: echo 'hello world' - optional
            
            
